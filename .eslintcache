[{"D:\\Projects\\Javascript\\website-manager-v2\\src\\index.js":"1","D:\\Projects\\Javascript\\website-manager-v2\\src\\App.js":"2","D:\\Projects\\Javascript\\website-manager-v2\\src\\serviceWorker.js":"3","D:\\Projects\\Javascript\\website-manager-v2\\src\\api\\index.js":"4","D:\\Projects\\Javascript\\website-manager-v2\\src\\routes\\index.js":"5","D:\\Projects\\Javascript\\website-manager-v2\\src\\api\\userprovider.js":"6","D:\\Projects\\Javascript\\website-manager-v2\\src\\api\\mainprovider.js":"7","D:\\Projects\\Javascript\\website-manager-v2\\src\\api\\theme_toggle_provider.js":"8","D:\\Projects\\Javascript\\website-manager-v2\\src\\api\\portfolio_manager.js":"9","D:\\Projects\\Javascript\\website-manager-v2\\src\\api\\new_photo_manager.js":"10","D:\\Projects\\Javascript\\website-manager-v2\\src\\pages\\index.js":"11","D:\\Projects\\Javascript\\website-manager-v2\\src\\firebase.js":"12","D:\\Projects\\Javascript\\website-manager-v2\\src\\pages\\mainroutes.js":"13","D:\\Projects\\Javascript\\website-manager-v2\\src\\styles\\index.js":"14","D:\\Projects\\Javascript\\website-manager-v2\\src\\utils\\index.js":"15","D:\\Projects\\Javascript\\website-manager-v2\\src\\pages\\unauth.js":"16","D:\\Projects\\Javascript\\website-manager-v2\\src\\pages\\login.js":"17","D:\\Projects\\Javascript\\website-manager-v2\\src\\vars.js":"18","D:\\Projects\\Javascript\\website-manager-v2\\src\\styles\\mixins.js":"19","D:\\Projects\\Javascript\\website-manager-v2\\src\\styles\\Main.js":"20","D:\\Projects\\Javascript\\website-manager-v2\\src\\styles\\Text.js":"21","D:\\Projects\\Javascript\\website-manager-v2\\src\\styles\\theme.js":"22","D:\\Projects\\Javascript\\website-manager-v2\\src\\styles\\Global.js":"23","D:\\Projects\\Javascript\\website-manager-v2\\src\\pages\\main\\index.js":"24","D:\\Projects\\Javascript\\website-manager-v2\\src\\styles\\media.js":"25","D:\\Projects\\Javascript\\website-manager-v2\\src\\styles\\fonts.js":"26","D:\\Projects\\Javascript\\website-manager-v2\\src\\pages\\main\\newphotospage.js":"27","D:\\Projects\\Javascript\\website-manager-v2\\src\\pages\\main\\messagespage.js":"28","D:\\Projects\\Javascript\\website-manager-v2\\src\\pages\\main\\portfoliopage.js":"29","D:\\Projects\\Javascript\\website-manager-v2\\src\\pages\\main\\mainpage.js":"30","D:\\Projects\\Javascript\\website-manager-v2\\src\\components\\index.js":"31","D:\\Projects\\Javascript\\website-manager-v2\\src\\components\\portfolio\\index.js":"32","D:\\Projects\\Javascript\\website-manager-v2\\src\\components\\portfolio\\deletedialog.js":"33","D:\\Projects\\Javascript\\website-manager-v2\\src\\components\\portfolio\\nestedlist.js":"34","D:\\Projects\\Javascript\\website-manager-v2\\src\\components\\portfolio\\categorydialog.js":"35","D:\\Projects\\Javascript\\website-manager-v2\\src\\components\\portfolio\\tiles.js":"36","D:\\Projects\\Javascript\\website-manager-v2\\src\\components\\react-image-masonry.js":"37","D:\\Projects\\Javascript\\website-manager-v2\\src\\components\\appbar.js":"38","D:\\Projects\\Javascript\\website-manager-v2\\src\\components\\material-ui-icon-picker\\index.js":"39","D:\\Projects\\Javascript\\website-manager-v2\\src\\components\\material-ui-icon-picker\\IconsStorage.js":"40","D:\\Projects\\Javascript\\website-manager-v2\\src\\components\\material-ui-icon-picker\\MaterialUiIconPicker.js":"41","D:\\Projects\\Javascript\\website-manager-v2\\src\\components\\portfolio\\phototile.js":"42"},{"size":509,"mtime":1599176374000,"results":"43","hashOfConfig":"44"},{"size":286,"mtime":1599260256000,"results":"45","hashOfConfig":"44"},{"size":5086,"mtime":499162500000,"results":"46","hashOfConfig":"44"},{"size":407,"mtime":1609380759382,"results":"47","hashOfConfig":"44"},{"size":757,"mtime":1599182142000,"results":"48","hashOfConfig":"44"},{"size":619,"mtime":1599174494000,"results":"49","hashOfConfig":"44"},{"size":770,"mtime":1609196471924,"results":"50","hashOfConfig":"44"},{"size":1755,"mtime":1599513214000,"results":"51","hashOfConfig":"44"},{"size":22707,"mtime":1599617772000,"results":"52","hashOfConfig":"44"},{"size":2620,"mtime":1609380747552,"results":"53","hashOfConfig":"44"},{"size":158,"mtime":1599166616000,"results":"54","hashOfConfig":"44"},{"size":5116,"mtime":1609285874672,"results":"55","hashOfConfig":"44"},{"size":1308,"mtime":1609196231669,"results":"56","hashOfConfig":"44"},{"size":247,"mtime":1599173854000,"results":"57","hashOfConfig":"44"},{"size":3082,"mtime":1609383987879,"results":"58","hashOfConfig":"44"},{"size":207,"mtime":1591999930000,"results":"59","hashOfConfig":"44"},{"size":2872,"mtime":1599186116000,"results":"60","hashOfConfig":"44"},{"size":490,"mtime":1598917070000,"results":"61","hashOfConfig":"44"},{"size":3165,"mtime":1592068030000,"results":"62","hashOfConfig":"44"},{"size":211,"mtime":1592069176000,"results":"63","hashOfConfig":"44"},{"size":407,"mtime":1592589142000,"results":"64","hashOfConfig":"44"},{"size":1817,"mtime":1599182444000,"results":"65","hashOfConfig":"44"},{"size":5143,"mtime":1599176420000,"results":"66","hashOfConfig":"44"},{"size":226,"mtime":1609196127748,"results":"67","hashOfConfig":"44"},{"size":702,"mtime":1592070064000,"results":"68","hashOfConfig":"44"},{"size":3213,"mtime":1592070024000,"results":"69","hashOfConfig":"44"},{"size":11340,"mtime":1609455682014,"results":"70","hashOfConfig":"44"},{"size":12713,"mtime":1599445482000,"results":"71","hashOfConfig":"44"},{"size":9380,"mtime":1609196927462,"results":"72","hashOfConfig":"44"},{"size":3927,"mtime":1609196248632,"results":"73","hashOfConfig":"44"},{"size":103,"mtime":1599442456000,"results":"74","hashOfConfig":"44"},{"size":273,"mtime":1609362944206,"results":"75","hashOfConfig":"44"},{"size":909,"mtime":1599613938000,"results":"76","hashOfConfig":"44"},{"size":1331,"mtime":1599529120000,"results":"77","hashOfConfig":"44"},{"size":1987,"mtime":1599613932000,"results":"78","hashOfConfig":"44"},{"size":2517,"mtime":1609285978170,"results":"79","hashOfConfig":"44"},{"size":7734,"mtime":1609355793399,"results":"80","hashOfConfig":"44"},{"size":3839,"mtime":1609196389016,"results":"81","hashOfConfig":"44"},{"size":133,"mtime":1599509238000,"results":"82","hashOfConfig":"44"},{"size":1158,"mtime":1599509328000,"results":"83","hashOfConfig":"44"},{"size":7787,"mtime":1599513940000,"results":"84","hashOfConfig":"44"},{"size":2230,"mtime":1609364900417,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"1rqjsb9",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"88"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"88"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"88"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"88"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"88"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"88"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"88"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"88"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"88"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"88"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"88"},"D:\\Projects\\Javascript\\website-manager-v2\\src\\index.js",[],["182","183"],"D:\\Projects\\Javascript\\website-manager-v2\\src\\App.js",[],"D:\\Projects\\Javascript\\website-manager-v2\\src\\serviceWorker.js",[],"D:\\Projects\\Javascript\\website-manager-v2\\src\\api\\index.js",[],"D:\\Projects\\Javascript\\website-manager-v2\\src\\routes\\index.js",[],"D:\\Projects\\Javascript\\website-manager-v2\\src\\api\\userprovider.js",[],"D:\\Projects\\Javascript\\website-manager-v2\\src\\api\\mainprovider.js",[],"D:\\Projects\\Javascript\\website-manager-v2\\src\\api\\theme_toggle_provider.js",["184"],"import React, { Component, createContext } from 'react';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { colors_light, colors_dark } from '@styles';\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\nconst ThemeToggleContext = createContext();\r\nconst { Provider, Consumer } = ThemeToggleContext;\r\n\r\n\r\nexport const lightTheme = createMuiTheme({\r\n  palette: {\r\n    type: 'light',\r\n    primary: {\r\n      main: colors_light.accent,\r\n    },\r\n    background: {\r\n      default: colors_light.background,\r\n      paper: colors_light.background,\r\n    },\r\n    text: {\r\n      primary: colors_light.textPrimary,\r\n      secondary: colors_light.textSecondary,\r\n    },\r\n  },\r\n});\r\n\r\nexport const darkTheme = createMuiTheme({\r\n  palette: {\r\n    type: 'dark',\r\n    primary: {\r\n      main: colors_dark.accent,\r\n    },\r\n    background: {\r\n      default: colors_dark.background,\r\n      paper: colors_dark.background,\r\n    },\r\n    text: {\r\n      primary: colors_dark.textPrimary,\r\n      secondary: colors_dark.textSecondary,\r\n    },\r\n  },\r\n});\r\n\r\nclass ThemeToggleProvider extends Component {\r\n  state = {\r\n    dark: false,\r\n    theme: lightTheme,\r\n  };\r\n\r\n  toggleTheme = () => {\r\n    this.setState(prevState => \r\n      ({ \r\n        dark: !prevState.dark,\r\n        theme: !prevState.dark ? darkTheme : lightTheme,\r\n      })\r\n    );\r\n    console.log(this.state.dark);\r\n  }\r\n\r\n  render() {\r\n    const { dark, theme } = this.state;\r\n    const { toggleTheme } = this;\r\n    \r\n    return (\r\n      <Provider \r\n      value={{ \r\n        dark,\r\n        theme, \r\n        toggleTheme \r\n      }}\r\n      >\r\n        {this.props.children}\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport { ThemeToggleContext, ThemeToggleProvider, Consumer as ThemeToggleConsumer };","D:\\Projects\\Javascript\\website-manager-v2\\src\\api\\portfolio_manager.js",["185"],"import { downloadFile, firestore, moveFirebaseFile, storage } from '@firebase-api';\r\nimport { currentTime, replaceAll, capitalize, filter } from '@utils';\r\n\r\nconst _ = require('lodash');\r\n\r\nconst url = \"https://firebasestorage.googleapis.com/v0/b/portfolio-49b69.appspot.com/o/\";\r\nconst token = \"ea925040-1fca-4eda-b1e8-0eb96567ab7e\";\r\n\r\n//Modified from the Portfolio Manager used in website-v2 with additional functions for editing.\r\n\r\nclass PortfolioManager {\r\n  constructor(menu) {\r\n    this.menu = menu;\r\n  }\r\n\r\n  /**\r\n   * Gets all the categories of the Picture Manager.\r\n   * @return {!Array<String>} The list of categories.\r\n   */\r\n  getCategories = () => [...this.menu.keys()];\r\n  /**\r\n   * Gets all the categories of the Picture Manager, but capitalzed.\r\n   * @return {!Array<String>} The list of categories but capitalized.\r\n   */\r\n  getCategoriesCapitalized = () => [...[...this.menu.keys()].map(category => capitalize(category))];\r\n  /**\r\n   * Gets all the categories of the Picture Manager, but in lowercase.\r\n   * @return {!Array<String>} The list of categories, but in lowercase.\r\n   */\r\n  getCategoriesLowercase = () => [...[...this.menu.keys()].map(category => category.toLowerCase())];\r\n  /**\r\n   * Gets the category name at the given index.\r\n   * @param {Number} index  The index to get category from. \r\n   * @return {String}       The category name at the given index.\r\n   */\r\n  getCategory = (index) => [...this.menu.keys()][index];\r\n\r\n  getIconAt = (category) => this.getPicturesAt(category, 'icon')[0].name;\r\n  getIconFrom = (index) => this.getPicturesFrom(index, 0)[0].name;\r\n\r\n  /**\r\n   * Gets the subcategories at the given category name.\r\n   * @param {String} category The category to get the subcategories from.\r\n   * @return {!Array<String>} The list of subcategories at the given category name.\r\n   */\r\n  getSubcategoriesAt = (category) => [...this.menu.get(category).keys()];  \r\n  /**\r\n  * Gets the subcategories at the given category name, but in lowercase.\r\n  * @param {String} category  The category to get the subcategories from.\r\n   * @return {!Array<String>} The list of subcategories at the given category name, but in lowercase.\r\n  */\r\n  getSubcategoriesAtLowercase = (category) => [...[...this.menu.get(category).keys()].map(s => s.toLowerCase())];\r\n  /**\r\n   * Gets the subcategories at the given category index.\r\n   * @param {Number} index    The index of the category to get the subcategories from.\r\n   * @return {!Array<String>} The list of subcategories at the given category index.\r\n   */\r\n  getSubcategoriesFrom = (index) => [...this.menu.get([...this.menu.keys()][index]).keys()];\r\n\r\n  /**\r\n   * Gets the subcategory name from the given category and subcategory index. Defaults to 'All' if the subcategory index is 0, regardless of category index.\r\n   * @param {*} categoryIndex     The index of the category to get the subcategories from.\r\n   * @param {*} subcategoryIndex  The index of the subcategory to get the name from.\r\n   */\r\n  getSubcategoryFrom = (categoryIndex, subcategoryIndex) => subcategoryIndex === 0 ? 'All' : this.getSubcategoriesFrom(categoryIndex)[subcategoryIndex];\r\n  /**\r\n   * Gets the list of pictures at the given category and subcategory keys.\r\n   * @param {String} category     The category to get the pictures from.\r\n   * @param {String} subcategory  The subcategory to get the pictures from.\r\n   * @return {!Array<Picture>}    The list of pictures at the given category and subcategory keys.\r\n   */\r\n  getPicturesAt = (category, subcategory) => this.menu.get(category).get(subcategory);\r\n  /**\r\n   * Gets the list of pictures at the given category and subcategory indices.\r\n   * @param {Number} category     The category to get the pictures from.\r\n   * @param {Number} subcategory  The subcategory to get the pictures from.\r\n   * @return {!Array<Picture>}    The list of pictures at the given category and subcategory indices.\r\n   */\r\n  getPicturesFrom = (category, subcategory) => this.menu.get([...this.menu.keys()][category]).get([...this.menu.get([...this.menu.keys()][category]).keys()][subcategory]);\r\n\r\n  /**\r\n   * Gets all the pictures at the given category name.\r\n   * @param {String} category   The category to get the pictures from.\r\n   * @return {!Array<Picture>}  The list of pictures at the given category name.\r\n   */\r\n  getAllPicturesAt = (category) => this.getPicturesAt(category, 'icon').filter(pic => pic.width !== 0 && pic.height !== 0);\r\n    /**\r\n   * Gets all the pictures at the given category index.\r\n   * @param {Number} index      The category to get the pictures from.\r\n   * @return {!Array<Picture>}  The list of pictures at the given category index.\r\n   */\r\n  getAllPicturesFrom = (index) => this.getPicturesAt(this.getCategory(index), 'icon').filter(pic => pic.width !== 0 && pic.height !== 0);\r\n\r\n  /**\r\n   * Gets all the picture urls in a given category name.\r\n   * @param {String} category   The category to get the pictures from.\r\n   * @return {!Array<String>}   The list of picture urls at the given category name.\r\n   */\r\n  getAllUrlsAt = (category) => [...this.getAllPicturesAt(category).map((pic) => `${url}${replaceAll(pic.path, '/', '%2F')}%2F${replaceAll(pic.name, ' ', '%20')}?alt=media&token=${token}`)];\r\n  /**\r\n   * Gets all the picture urls in a given category index.\r\n   * @param {Number} index    The category to get the pictures from.\r\n   * @return {!Array<String>} The list of picture urls at the given category index.\r\n   */\r\n  getAllUrlsFrom = (index) => [...this.getAllPicturesFrom(index).map((pic) => `${url}${replaceAll(pic.path, '/', '%2F')}%2F${replaceAll(pic.name, ' ', '%20')}?alt=media&token=${token}`)];\r\n  /**\r\n   * Gets all the picture urls for a given list of pictures.\r\n   * @param {!Array<Picture>} pictures  The list of pictures to get urls for.\r\n   * @return {!Array<String>}           The list of picture urls for the given list of pictures.\r\n   */\r\n  getUrlsFor = (pictures) => [...pictures.map((pic) => `${url}${replaceAll(pic.path, '/', '%2F')}%2F${replaceAll(pic.name, ' ', '%20')}?alt=media&token=${token}`)];\r\n\r\n  /**\r\n   * Gets all the pictures in the Picture Manager\r\n   * @return {!Array<Picture>} A list of all the pictures in the Picture Manager.\r\n   */\r\n  getAllPictures = () => {\r\n    let tmp = [];\r\n    this.getCategories().forEach(category => tmp = tmp.concat(this.getAllPicturesAt(category)));\r\n    tmp.sort((a, b) => b.time.localeCompare(a.time));\r\n    return tmp;\r\n  }\r\n\r\n  /**\r\n   * Gets the true category name from a given query string.\r\n   * @param {String} query  The query string to search.\r\n   * @return {String}       The true category name of the query string.\r\n   */\r\n  trueCategoryName = (query) => {\r\n    let result = ''\r\n    this.getCategories().forEach(category => {\r\n      if(category.toLowerCase().localeCompare(query.toLowerCase()) === 0) {\r\n        result = category;\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Gets the true subcategory name from a given category and query string. If the query string is \"misc\", this returns \"Miscellaneous\".\r\n   * @param {String} category The category to search in.\r\n   * @param {String} query    The query string to search.\r\n   * @return {String}         The true subcategory name of the query string.\r\n   */\r\n  trueSubcategoryName = (category, query) => {\r\n    if(query.toLowerCase().localeCompare('misc') === 0) {\r\n      return 'Miscellaneous';\r\n    } else {\r\n      let result = ''\r\n      this.getSubcategoriesAt(this.trueCategoryName(category)).forEach(sc => {\r\n        if(sc.toLowerCase().localeCompare(query.toLowerCase()) === 0) {\r\n          result = sc;\r\n        }\r\n      });\r\n      return result;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Searches for images in a given query string, and returns whether the query contains any pictures.\r\n   * By default, a trailing forward slash ('.../') or '.../all' will search for the category preceding the forward slash.\r\n   * @param {String} query  The query string to search.\r\n   * @return {Boolean}      Whether the query contains any pictures.\r\n   */\r\n  hasPictures = (query) => {\r\n    let raw = filter(query.split('/'));\r\n    if(raw.length === 1) {\r\n      let category = raw[0].toLowerCase();\r\n      return !_.isEmpty(this.trueCategoryName(category));\r\n    } else if(raw.length === 2) {\r\n      let category = raw[0].toLowerCase();\r\n      let subcategory = raw[1].toLowerCase();\r\n      if(_.isEmpty(subcategory) || subcategory.localeCompare(\"all\") === 0) {\r\n        return this.hasPictures(category);\r\n      } else {\r\n        if(this.hasPictures(category)) {\r\n          return !_.isEmpty(this.trueSubcategoryName(category, subcategory));\r\n        } else {\r\n          return false;\r\n        }\r\n      }\r\n    } else if(query.toLowerCase().localeCompare('all') === 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Checks if the given query string has any pictures, and returns the list of pictures if so.\r\n   * By default, a trailing forward slash ('.../'), '.../all', or '.../icon' will return all the photos in the category.\r\n   * 'all' will return all the pictures in the Picture Manager.\r\n   * @param {String} query        The query string to search.\r\n   * @return {!Array<Pictures>}   The list of pictures at the given query string. Returns an empty list if the query fails.\r\n   */\r\n  getPicturesQuery = (query) => {\r\n    try {\r\n      if(this.hasPictures(query)) {\r\n        let raw = filter(query.split('/'));\r\n        if(raw.length === 1) {\r\n          let category = raw[0];\r\n          return this.getAllPicturesAt(this.trueCategoryName(category));\r\n        } else if(raw.length === 2) {\r\n          let category = this.trueCategoryName(raw[0]);\r\n          let subcategory = raw[1];\r\n          if((subcategory.toLowerCase().localeCompare(\"all\") === 0) || (subcategory.toLowerCase().localeCompare(\"icon\") === 0) || _.isEmpty(subcategory)) {\r\n            return this.getAllPicturesAt(category);\r\n          } else {\r\n            return this.getPicturesAt(category, this.trueSubcategoryName(category, subcategory));\r\n          }\r\n        } else {\r\n          return [];\r\n        }\r\n      } else if(filter(query.split('/'))[0].toLowerCase().localeCompare('all') === 0) {\r\n        return this.getAllPictures();\r\n      }\r\n      else {\r\n        return [];\r\n      }\r\n    } catch (e) {\r\n      return [];\r\n    }  \r\n  }\r\n\r\n    /**\r\n   * Returns the category and subcategory name of a given query string. \r\n   * By default, a trailing forward slash ('.../') or '.../all' will return '' as the subcategory.\r\n   * 'all' will return 'All Photos'.\r\n   * @param {String} query  The query string to search.\r\n   * @return {object}       An object with the category and subcategory names. \r\n   */\r\n  getNames = (query) => {\r\n    try {\r\n      if(this.hasPictures(query)) {\r\n        let raw = filter(query.split('/'));\r\n        if(raw.length === 1) { \r\n          return {\r\n            category: this.trueCategoryName(raw[0]),\r\n            subcategory: '',\r\n          };\r\n        } else if (raw.length === 2) {\r\n          return {\r\n            category: this.trueCategoryName(raw[0]),\r\n            subcategory: this.trueSubcategoryName(this.trueCategoryName(raw[0]), raw[1]),\r\n          };\r\n        } else {\r\n          return {\r\n            category: '',\r\n            subcategory: '',\r\n          };\r\n        }\r\n      } else if(filter(query.split('/'))[0].toLowerCase().localeCompare('all') === 0) {\r\n        return {\r\n          category: 'All Photos',\r\n          subcategory: '',\r\n        };\r\n      } else {\r\n        return {\r\n          category: '',\r\n          subcategory: '',\r\n        };\r\n      }\r\n    } catch (e) {\r\n      return {\r\n        category: '',\r\n        subcategory: '',\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adds a new category with the given category name and item. \r\n   * @param {String} category The category name.\r\n   * @param {String} icon     The icon name.\r\n   */\r\n  addCategory = async (category, icon) => {\r\n    let subTmp = new Map();\r\n    subTmp.set('icon', [new Picture({ name: icon, time: currentTime() })]);\r\n    this.menu.set(category, subTmp);\r\n\r\n    firestore.collection('photos').doc(category).set({\r\n      category: category,\r\n      icon: icon,\r\n      subcategories: []\r\n    });\r\n  }\r\n\r\n\r\n  renameCategory = async (categoryOld, categoryNew) => {\r\n    this.menu.set(categoryNew, this.menu.get(categoryOld));\r\n\r\n    var oldData = await firestore.collection('photos').doc(categoryOld).get();\r\n    \r\n    await firestore.collection('photos').doc(categoryNew).set({\r\n      category: categoryNew,\r\n      icon: oldData.data().icon,\r\n      subcategories: oldData.data().subcategories,\r\n    });\r\n\r\n    var images = this.getAllPicturesAt(categoryOld);\r\n    console.log(images);\r\n    for(var i = 0; i < images.length; i++) {\r\n      var image = images[i];\r\n      var path = image.path.split('/');\r\n      var subcategory = path.length > 1 ? path[1] : null;\r\n      var oldPath = image.path, newPath = `${categoryNew}${subcategory === null ? '' : `/${subcategory}`}`;\r\n      image.path = newPath;\r\n      console.log(newPath);\r\n\r\n      if(subcategory) {\r\n        await firestore.collection(\"photos\").doc(categoryOld).collection(subcategory).doc(image.name).delete();\r\n        await firestore.collection(\"photos\").doc(categoryNew).collection(subcategory).doc(image.name).set({\r\n          'name': image.name,\r\n          'title': image.title,\r\n          'w': image.width,\r\n          'h': image.height,\r\n          'desc': image.description,\r\n          'buy': image.buy,\r\n          'dl': image.download,\r\n          'time': image.time,\r\n        }).catch((error) => console.log(error));\r\n        try {\r\n          await moveFirebaseFile(`${oldPath}/${image.name}`, `${newPath}/${image.name}`);\r\n          await moveFirebaseFile(`${oldPath}/${image.dl}`, `${newPath}/${image.dl}`);\r\n        } catch (e) {\r\n          console.log(e);\r\n        }\r\n      } else {\r\n        await firestore.collection(\"photos\").doc(categoryOld).collection('images').doc(image.name).delete();\r\n        await firestore.collection(\"photos\").doc(categoryNew).collection('images').doc(image.name).set({\r\n          'name': image.name,\r\n          'title': image.title,\r\n          'w': image.width,\r\n          'h': image.height,\r\n          'desc': image.description,\r\n          'buy': image.buy,\r\n          'dl': image.download,\r\n          'time': image.time,\r\n        }).catch((error) => console.log(error));\r\n        try {\r\n          await moveFirebaseFile(`${oldPath}/${image.name}`, `${newPath}/${image.name}`);\r\n          await moveFirebaseFile(`${oldPath}/${image.dl}`, `${newPath}/${image.dl}`);\r\n        } catch (e) {\r\n          console.log(e);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.deleteCategory(categoryOld);\r\n  }\r\n\r\n  \r\n  deleteCategory = async (category) => {\r\n    const subcategories = this.getSubcategoriesAt(category);\r\n    subcategories.forEach(async (subcategory) => {\r\n      await firestore.collection('photos').doc(category).collection(subcategory).get().then(async (data) => {\r\n        data.docs.map(async (doc) => {\r\n          await firestore.collection('photos').doc(category).collection(subcategory).doc(doc.id).delete();\r\n          return null;\r\n        });\r\n      });\r\n    });\r\n    await firestore.collection('photos').doc(category).delete();\r\n    this.menu.delete(category);\r\n  }\r\n\r\n  changeIcon = async (category, icon) => {\r\n    await firestore.collection('photos').doc(category).update({\r\n      icon: icon\r\n    });\r\n\r\n    this.menu.get(category).get('icon')[0] = new Picture({ name: icon, time: currentTime() });\r\n  }\r\n\r\n  addSubcategory = async (category, subcategory) => {\r\n    this.menu.get(category).set(subcategory, []);\r\n\r\n    await firestore.collection('photos').doc(category).update({\r\n      subcategories: this.getSubcategoriesAt(category).slice(1)\r\n    });\r\n    await firestore.collection('photos').doc(category).collection(subcategory).doc('null').set({\r\n      name: 'null'\r\n    });\r\n  }\r\n\r\n  deleteSubcategory = async (category, subcategory) => {\r\n    this.menu.get(category).delete(subcategory);\r\n\r\n    await firestore.collection('photos').doc(category).collection(subcategory).get().then(async (data) => {\r\n      data.docs.map(async (doc) => {\r\n        await firestore.collection('photos').doc(category).collection(subcategory).doc(doc.id).delete();\r\n        return null;\r\n      });\r\n    });\r\n  }\r\n\r\n  addPhoto = async (props) => {\r\n    const { category, subcategory, newPic, newFile, newDLFile} = props;\r\n    if(subcategory) {\r\n      await firestore.collection(\"photos\").doc(category).collection(subcategory).doc(newPic.name).set({\r\n        'name': newPic.name,\r\n        'title': newPic.title,\r\n        'w': newPic.width,\r\n        'h': newPic.height,\r\n        'desc': newPic.description,\r\n        'buy': newPic.buy,\r\n        'dl': newPic.download,\r\n        'time': newPic.time,\r\n      }).catch((error) => console.log(error));\r\n      try {\r\n        if(newFile) {\r\n          await storage.ref().child(category).child(subcategory).child(newPic.name).put(newFile);\r\n        }\r\n        if(newDLFile) {\r\n          await storage.ref().child(category).child(subcategory).child(newPic.dl).put(newDLFile);\r\n        }\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    } else {\r\n      await firestore.collection(\"photos\").doc(category).collection('images').doc(newPic.name).set({\r\n        'name': newPic.name,\r\n        'title': newPic.title,\r\n        'w': newPic.width,\r\n        'h': newPic.height,\r\n        'desc': newPic.description,\r\n        'buy': newPic.buy,\r\n        'dl': newPic.download,\r\n        'time': newPic.time,\r\n      }).catch((error) => console.log(error));\r\n      try {\r\n        if(newFile) {\r\n          await storage.ref().child(category).child(newPic.name).put(newFile);\r\n        }\r\n        if(newDLFile) {\r\n          await storage.ref().child(category).child(newPic.dl).put(newDLFile);\r\n        }\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\r\nclass Picture {\r\n  constructor(data) {\r\n    this.name = (typeof data.name !== 'undefined') ? data.name : '';\r\n    this.title = (typeof data.title !== 'undefined') ? data.title : '';\r\n    this.width = (typeof data.w !== 'undefined') ? data.w : 0;\r\n    this.height = (typeof data.h !== 'undefined') ? data.h : 0;\r\n    this.description = (typeof data.desc !== 'undefined') ? data.desc : '';\r\n    this.buy = (typeof data.buy !== 'undefined') ? data.buy : '';\r\n    this.download = (typeof data.dl !== 'undefined') ? data.dl : '';\r\n    this.time = (typeof data.time !== 'undefined') ? data.time : '';\r\n    this.path = (typeof data.path !== 'undefined') ? data.path : '';\r\n  }\r\n\r\n  /**\r\n   * Gets the url for this picture.\r\n   * @param {String} url    The url of the storage reference.\r\n   * @param {String} token  The token for the firebase storage.\r\n   * @return {String}       The url for this picture.\r\n   */\r\n  getUrl = () => `${url}${replaceAll(this.path, '/', '%2F')}%2F${replaceAll(this.name, ' ', '%20')}?alt=media&token=${token}`;\r\n}\r\n\r\n/**\r\n * Gets all the picture urls for a given list of pictures.\r\n * @param {!Array<Picture>} pictures  The list of pictures to get urls for.\r\n * @return {!Array<String>}           The list of picture urls for the given list of pictures.\r\n */\r\nexport const getUrlsFor = (pictures) => [...pictures.map((pic) => pic.getUrl())];\r\n\r\nexport const fromFirestore = async () => {\r\n  let menu = new Map();\r\n\r\n  await firestore\r\n  .collection(\"photos\")\r\n  .orderBy('category')\r\n  .get()\r\n  .then(async (snapshot1) => {\r\n    const categories = snapshot1.docs.map(doc => ({\r\n      ...doc.data()\r\n    }));\r\n    for await (const item of categories) {\r\n      let categoryName = item.category;\r\n      let icon = item.icon;\r\n      let subcategories = item.subcategories;\r\n\r\n      let subTmp = new Map();\r\n\r\n      subTmp.set( 'icon', [new Picture({ name: icon, time: currentTime() })] );\r\n\r\n      if(subcategories.length !== 0) {\r\n        subcategories.sort();\r\n\r\n        for await (const subcategory of subcategories) {\r\n          await firestore\r\n            .collection(\"photos\")\r\n            .doc(categoryName)\r\n            .collection(subcategory)\r\n            .get()\r\n            .then(snapshot2 => {\r\n              const images = snapshot2.docs.map(doc => ({\r\n                ...doc.data()\r\n              }));\r\n              let pictures = [];\r\n              images.forEach((image) => {\r\n                try {\r\n                  //console.log(JSON.stringify(image));\r\n                  if(image.name !== 'null') {\r\n                    pictures.push(new Picture({\r\n                      path: `${categoryName}/${subcategory}`,\r\n                      ...image\r\n                    }));\r\n                  }\r\n                } catch (e) {\r\n                  console.log(e);\r\n                }\r\n              });\r\n              pictures.sort((a, b) => b.time.localeCompare(a.time));\r\n              subTmp.set(subcategory, pictures);\r\n              subTmp.set('icon', [...subTmp.get('icon'), ...pictures]);\r\n            });\r\n          }\r\n        }\r\n\r\n      try {\r\n        await firestore\r\n        .collection(\"photos\")\r\n        .doc(categoryName)\r\n        .collection(\"images\")\r\n        .get()\r\n        .then(snapshot3 => {\r\n          const images = snapshot3.docs.map(doc => ({\r\n            ...doc.data()\r\n          }));\r\n          images.forEach((image) => {\r\n            try {\r\n              //console.log(JSON.stringify(image));\r\n              if(image.name !== 'null') {\r\n                subTmp.get('icon').push(new Picture({\r\n                  path: `${categoryName}`,\r\n                  ...image\r\n                }));\r\n                if(subcategories.length !== 0) {\r\n                  if(typeof subTmp.get('Miscellaneous') === 'undefined') {\r\n                    subTmp.set(\"Miscellaneous\", [\r\n                      new Picture({\r\n                        path: `${categoryName}`,\r\n                        ...image\r\n                      })\r\n                    ]);\r\n                  } else {\r\n                    subTmp.get('Miscellaneous').push(new Picture({\r\n                      path: `${categoryName}`,\r\n                      ...image\r\n                    }));\r\n                  }\r\n                }\r\n              }\r\n              subTmp.get('icon').sort((a, b) => b.time.localeCompare(a.time));\r\n              subTmp.get('Miscellaneous').sort((a, b) => b.time.localeCompare(a.time));\r\n            } catch(e) {\r\n              console.log(e);\r\n            }\r\n          });\r\n        });\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n      \r\n      subTmp.get('icon').sort((a, b) => b.time.localeCompare(a.time))\r\n      menu.set(categoryName, subTmp);\r\n      \r\n    }\r\n  });\r\n\r\n  console.log(\"Picture Manager initialized.\");\r\n\r\n  return new PortfolioManager(menu);\r\n}\r\n","D:\\Projects\\Javascript\\website-manager-v2\\src\\api\\new_photo_manager.js",["186","187"],"import { firestore, storage } from '@firebase-api';\r\nimport { replaceAll } from '@utils';\r\n\r\nconst url = \"https://firebasestorage.googleapis.com/v0/b/portfolio-49b69.appspot.com/o/\";\r\nconst token = \"ea925040-1fca-4eda-b1e8-0eb96567ab7e\";\r\n\r\nconst _ = require('lodash');\r\n\r\nclass NewPhotoManager {\r\n  constructor(pictures) {\r\n    this.pictures = pictures;\r\n  }\r\n\r\n  addPhoto = async (newPic, newFile) => {\r\n    this.pictures.push(newPic);\r\n\r\n    var data = {};\r\n    this.pictures.map(pic => data[pic.time] = `\"${pic.name}\",${pic.width},${pic.height}`);\r\n\r\n    await firestore.collection(\"photo\")\r\n      .doc(\"all\")\r\n      .set({ 'photos': data })\r\n      .catch((error) => { console.log(error); return false; });\r\n\r\n    try {\r\n      if(newFile) {\r\n        await storage.ref().child(\"photo\").child(newPic.name).put(newFile);\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  getHeightAndWidthFromDataUrl = dataURL => new Promise(resolve => {\r\n    const img = new Image()\r\n    img.onload = () => {\r\n      resolve({\r\n        height: img.height,\r\n        width: img.width\r\n      })\r\n    }\r\n    img.src = dataURL\r\n  })\r\n\r\n  deletePhoto = async (name) => {\r\n    this.pictures = this.pictures.filter((pic, index, arr) => pic.name != name);\r\n    \r\n    var data = {};\r\n    this.pictures.map(pic => data[pic.time] = `\"${pic.name}\",${pic.width},${pic.height}`);\r\n\r\n    await firestore.collection(\"photo\")\r\n      .doc(\"all\")\r\n      .set({ 'photos': data })\r\n      .catch((error) => console.log(error));\r\n\r\n    try {\r\n      await storage.ref().child(\"photo\").child(name).delete();\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport class Picture {\r\n  constructor(key, value) {\r\n    this.time = key;\r\n    this.name = value.split('\"')[1];\r\n    this.width = parseInt(value.split(\",\")[1]);\r\n    this.height = parseInt(value.split(\",\")[2]);\r\n  }\r\n\r\n  /**\r\n   * Gets the url for this picture.\r\n   * @param {String} url    The url of the storage reference.\r\n   * @param {String} token  The token for the firebase storage.\r\n   * @return {String}       The url for this picture.\r\n   */\r\n  getUrl = () => `${url}photo%2F${replaceAll(this.name, ' ', '%20')}?alt=media&token=${token}`;\r\n}\r\n\r\nexport const fromFirestoreNew = async () => {\r\n  var list = [];\r\n\r\n  await firestore\r\n  .collection(\"photo\")\r\n  .doc(\"all\")\r\n  .get().then(response => {\r\n      const data = response.data();\r\n      const map = data.photos;\r\n      for(const [key, value] of Object.entries(map)) {\r\n        list.push(new Picture(key, value));\r\n      }\r\n  });\r\n\r\n  return new NewPhotoManager(list);\r\n}","D:\\Projects\\Javascript\\website-manager-v2\\src\\pages\\index.js",[],"D:\\Projects\\Javascript\\website-manager-v2\\src\\firebase.js",[],"D:\\Projects\\Javascript\\website-manager-v2\\src\\pages\\mainroutes.js",[],"D:\\Projects\\Javascript\\website-manager-v2\\src\\styles\\index.js",[],"D:\\Projects\\Javascript\\website-manager-v2\\src\\utils\\index.js",[],"D:\\Projects\\Javascript\\website-manager-v2\\src\\pages\\unauth.js",["188"],"import React from 'react';\r\nimport styled from 'styled-components';\r\n \r\nconst UnauthPage = () => {\r\n  return (\r\n    <div>\r\n      <h1>Unauthorized Page</h1>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default UnauthPage;","D:\\Projects\\Javascript\\website-manager-v2\\src\\pages\\login.js",["189","190"],"import React, { Component } from 'react';\r\nimport { signIn } from '@firebase-api'\r\nimport { email, pass } from '@vars';\r\nimport { ThemeToggleConsumer } from '@api';\r\nimport { \r\n  Box,\r\n  Button,\r\n  CssBaseline,\r\n  IconButton,\r\n  Link,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Brightness7, Brightness3 } from '@material-ui/icons'\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nconst _ = require('lodash');\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © Howard Tseng '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    component: 'div',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: \"center\",\r\n    overflow: 'hidden',\r\n    minHeight: '95vh',\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  bottom: {\r\n    display: 'flex',\r\n    position: 'absolute',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: \"center\",\r\n    bottom: theme.spacing(2),\r\n    left: '0',\r\n    right: '0',\r\n  },\r\n  toggleButton: {\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nclass LoginPage extends Component {\r\n  render() {\r\n    const classes = this.props.classes;\r\n    return (\r\n      <ThemeToggleConsumer>\r\n        {themeContext => (\r\n          <ThemeProvider theme={themeContext.theme}>\r\n            <CssBaseline />\r\n            <Box className={classes.paper}>\r\n              <Typography component=\"h1\" variant=\"h2\">\r\n                Website Manager\r\n              </Typography>\r\n              <Typography>\r\n                <Link href={'https://howardt12345.com'} target='_blank' rel=\"noopener noreferrer\" color='inherit'>\r\n                  howardt12345.com\r\n                </Link>\r\n              </Typography>\r\n              <Button \r\n                variant=\"outlined\" \r\n                color=\"primary\" \r\n                className={classes.button}\r\n                onClick={async () => {\r\n                  await signIn(email, pass);\r\n                }}\r\n              >\r\n                Sign In\r\n              </Button>\r\n              <Box className={classes.bottom}>\r\n                <IconButton \r\n                  className={classes.toggleButton} \r\n                  color ='inherit'\r\n                  onClick={themeContext.toggleTheme}\r\n                >\r\n                  {themeContext.dark ? <Brightness3 /> : <Brightness7 />}\r\n                </IconButton>\r\n                <Copyright />\r\n              </Box>\r\n            </Box>\r\n          </ThemeProvider>\r\n        )}\r\n      </ThemeToggleConsumer>\r\n    );\r\n  }\r\n}\r\n \r\nexport default () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <LoginPage classes={classes} />\r\n  )\r\n}","D:\\Projects\\Javascript\\website-manager-v2\\src\\vars.js",[],"D:\\Projects\\Javascript\\website-manager-v2\\src\\styles\\mixins.js",[],"D:\\Projects\\Javascript\\website-manager-v2\\src\\styles\\Main.js",[],"D:\\Projects\\Javascript\\website-manager-v2\\src\\styles\\Text.js",[],"D:\\Projects\\Javascript\\website-manager-v2\\src\\styles\\theme.js",[],"D:\\Projects\\Javascript\\website-manager-v2\\src\\styles\\Global.js",[],"D:\\Projects\\Javascript\\website-manager-v2\\src\\pages\\main\\index.js",[],"D:\\Projects\\Javascript\\website-manager-v2\\src\\styles\\media.js",[],"D:\\Projects\\Javascript\\website-manager-v2\\src\\styles\\fonts.js",[],"D:\\Projects\\Javascript\\website-manager-v2\\src\\pages\\main\\newphotospage.js",["191","192","193","194","195","196","197","198"],"D:\\Projects\\Javascript\\website-manager-v2\\src\\pages\\main\\messagespage.js",["199","200","201"],"import React, { Component, useRef, useState, useEffect } from 'react';\r\nimport { MainAppBar } from '@components'\r\nimport { getMessages } from '@firebase-api';\r\nimport { MainConsumer } from '@api';\r\nimport { \r\n  Box,\r\n  Button,\r\n  CssBaseline,\r\n  Drawer,\r\n  Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle,\r\n  Divider,\r\n  IconButton,\r\n  InputBase,\r\n  List, ListItem, ListItemSecondaryAction, ListItemText,\r\n  Tabs, Tab,\r\n  Toolbar,\r\n  Tooltip,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { \r\n  Archive, \r\n  Check,\r\n  Delete, \r\n  Markunread,\r\n  Search, \r\n  Refresh, \r\n  Reply,\r\n  Unarchive,\r\n} from '@material-ui/icons/';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nconst _ = require('lodash');\r\n\r\nconst drawerWidth = 340;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerContainer: {\r\n    overflow: 'auto',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    marginLeft: drawerWidth,\r\n    padding: theme.spacing(3),\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 1),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n  },\r\n  listItem: {\r\n    maxWidth: \"20rem\",\r\n    overflow: \"hidden\",\r\n    position: \"relative\",\r\n    lineHeight: \"1.2em\",\r\n    maxHeight: \"3.5em\",\r\n    textAlign: \"justify\",\r\n    marginRight: \"-1em\",\r\n    paddingRight: \"1em\",\r\n    \"&&:before\": {\r\n      content: '\"...\"',\r\n      position: \"absolute\",\r\n      right: 0,\r\n      bottom: 0\r\n    },\r\n    \"&&:after\": {\r\n      content: '\"\"',\r\n      position: \"absolute\",\r\n      right: 0,\r\n      width: \"1em\",\r\n      height: \"1em\",\r\n      marginTop: \"0.2em\",\r\n      background: \"white\"\r\n    }\r\n  },\r\n  iconButton: {\r\n    margin: theme.spacing(0, 1),\r\n  },\r\n}));\r\n\r\nconst TooltipDiv = props => {\r\n  const divRef = useRef(null);\r\n  const [allowTooltip, setAllowTooltip] = useState(false);\r\n  useEffect(() => {\r\n    if (\r\n      !allowTooltip &&\r\n      divRef.current.scrollHeight > divRef.current.offsetHeight\r\n    ) {\r\n      setAllowTooltip(true);\r\n    }\r\n  }, [allowTooltip]);\r\n  if (allowTooltip) {\r\n    return (\r\n      <Tooltip title={props.text} disableHoverListener>\r\n        <div ref={divRef} className={props.className}>\r\n          {props.text}\r\n        </div>\r\n      </Tooltip>\r\n    );\r\n  }\r\n  return (\r\n    <div ref={divRef} className={props.className}>\r\n      {props.text}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    //'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nclass MessagesPage extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      allMessages: [],\r\n      messages: [],\r\n      index: -1,\r\n      current: null,\r\n      tab: 0,\r\n    };\r\n    this.loadMessages();\r\n  }\r\n\r\n  loadMessages = async () => {\r\n    const messages = await getMessages();\r\n    messages.sort((a, b) => b.date.localeCompare(a.date));\r\n    this.setState({\r\n      allMessages: messages,\r\n      index: -1,\r\n      current: null,\r\n      deleteDialog: false,\r\n    });\r\n    console.log(messages);\r\n    this.updateList(this.state.tab);\r\n  }\r\n  \r\n  updateList = (index) => {\r\n    switch(index) {\r\n      case 0:\r\n        this.setState({\r\n          messages: this.state.allMessages.filter(message => !message.replied).filter(message => !message.archived),\r\n          index: -1,\r\n        });\r\n        break;\r\n      case 1:\r\n        this.setState({\r\n          messages: this.state.allMessages.filter(message => message.replied),\r\n          index: -1,\r\n        });\r\n        break;\r\n      case 2:\r\n        this.setState({\r\n          messages: this.state.allMessages.filter(message => message.archived),\r\n          index: -1,\r\n        });\r\n        break;\r\n      default:\r\n        this.setState({\r\n          messages: this.state.allMessages.filter(message => !message.replied).filter(message => !message.archived),\r\n          index: -1,\r\n        });\r\n        break;\r\n    }\r\n  }\r\n\r\n  search = (query) => {\r\n    console.log(`query: {${query}}`);\r\n    const tmp = [];\r\n    this.state.allMessages.forEach(message => {\r\n      if(message.email.includes(query) || message.name.includes(query) || message.subject.includes(query) || message.body.includes(query)) {\r\n        tmp.push(message);\r\n      }\r\n    });\r\n    tmp.sort((a, b) => b.date.localeCompare(a.date));\r\n    this.setState({ messages: tmp, index: -1 });\r\n  }\r\n\r\n  MessageContent = (props) => {\r\n    const { message, classes } = props;\r\n    return (\r\n      <div>\r\n        <Box display=\"flex\" flexDirection='row'>\r\n          <Box flexGrow={1} justifyContent=\"flex-start\">\r\n            <Typography variant='h6'>\r\n              <Box fontWeight={400}>{`${message.name} (${message.email})`}</Box>\r\n            </Typography>\r\n            <Typography variant='subtitle1'>\r\n              <Box>{message.date}</Box>\r\n            </Typography>\r\n          </Box>\r\n          <Box flexDirection='row'>\r\n            <Tooltip title={message.replied ? \"Mark Unread\" : 'Reply'}>\r\n              <IconButton \r\n                className={classes.iconButton}\r\n                onClick={() => {\r\n                  if (message.replied) {\r\n                    message.markUnread();\r\n                  } else {\r\n                    message.reply();\r\n                  }\r\n                  this.updateList(this.state.tab);\r\n                }}\r\n              >\r\n                {message.replied ? <Markunread /> : <Reply />}\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title={message.archived ? 'Unarchive' : 'Archive'}>\r\n              <IconButton \r\n                className={classes.iconButton}\r\n                onClick={() => {\r\n                  message.toggleArchive();\r\n                  this.updateList(this.state.tab);\r\n                }}\r\n              >\r\n                {message.archived ? <Unarchive /> : <Archive />}\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title=\"Delete\">\r\n              <IconButton \r\n                className={classes.iconButton}\r\n                onClick={() => {\r\n                  this.openDialog();\r\n                }}\r\n              >\r\n                <Delete />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </Box>\r\n        </Box>\r\n        <Box m={2} />\r\n        <Typography variant='h5'>\r\n          <Box>{message.subject}</Box>\r\n        </Typography>\r\n        <Box m={1} />\r\n        <Typography paragraph style={{whiteSpace: 'pre-line'}}>\r\n          {message.body}\r\n        </Typography>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  MessagePreview = (props) => {\r\n    const { message, index } = props;\r\n    return (\r\n      <ListItem \r\n        key={message.id}\r\n        button \r\n        selected={this.state.index === index}\r\n        onClick={event => this.selectIndex(event, message, index)}\r\n      >\r\n        <ListItemText \r\n          primary={\r\n            <Box display=\"flex\" flexDirection='row'>\r\n              <Box flexGrow={1} justifyContent=\"flex-start\">\r\n                <Typography variant='body2'>\r\n                  {`${message.name} (${message.email})`}\r\n                </Typography>\r\n                <Typography variant='body2' noWrap>\r\n                  <Box fontWeight={500}>{message.subject}</Box>\r\n                </Typography>\r\n              </Box>\r\n              <Box>\r\n                {message.replied ? <Check /> : <div />}\r\n              </Box>\r\n            </Box>\r\n          }\r\n          secondary={\r\n            <TooltipDiv text={message.body} className={props.classes.listItem} />\r\n          }\r\n        />\r\n      </ListItem>\r\n    );\r\n  }\r\n\r\n  selectIndex = (event, message, index) => {\r\n    console.log(index);\r\n    this.setState({ \r\n      current: message,\r\n      index: index,\r\n    });\r\n  }\r\n\r\n  openDialog = () => {\r\n    this.setState({ deleteDialog: true });\r\n  }\r\n\r\n  closeDialog = () => {\r\n    this.setState({ deleteDialog: false });\r\n  }\r\n \r\n  render() {\r\n    const classes = this.props.classes;\r\n\r\n    return (\r\n      <div classes={classes.root}>\r\n        <CssBaseline />\r\n        <MainAppBar page='messages'/>\r\n        <Drawer\r\n          className={classes.drawer}\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}\r\n        >\r\n          <Toolbar variant=\"dense\"/>\r\n          <div className={classes.drawerContainer}>\r\n            <List>\r\n              <ListItem>\r\n                <ListItemText>\r\n                  <div className={classes.search}>\r\n                    <div className={classes.searchIcon}>\r\n                      <Search />\r\n                    </div>\r\n                    <InputBase\r\n                      placeholder=\"Search…\"\r\n                      classes={{\r\n                        root: classes.inputRoot,\r\n                        input: classes.inputInput,\r\n                      }}\r\n                      inputProps={{ 'aria-label': 'search' }}\r\n                      onChange={(query) => {\r\n                        this.search(query.target.value);\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </ListItemText>\r\n                <ListItemSecondaryAction>\r\n                  <IconButton edge='end' onClick={this.loadMessages}>\r\n                    <Refresh />\r\n                  </IconButton>\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemText>\r\n                  <div>\r\n                    <Tabs\r\n                      aria-label=\"message list\"\r\n                      variant=\"standard\"\r\n                      value={this.state.tab}\r\n                      indicatorColor=\"primary\"\r\n                      onChange={(event, index) => {\r\n                        this.setState({ tab: index });\r\n                        this.updateList(index);\r\n                      }}\r\n                    >\r\n                      <Tab label=\"Needs Action\" {...a11yProps(0)} style={{minWidth:\"40%\"}}/>\r\n                      <Tab label=\"Replied\" {...a11yProps(1)} style={{minWidth:\"27.5%\"}}/>\r\n                      <Tab label=\"Archived\" {...a11yProps(2)} style={{minWidth:\"27.5%\"}}/>\r\n                    </Tabs>\r\n                  </div>\r\n                </ListItemText>\r\n              </ListItem>\r\n            </List>\r\n            <Divider />\r\n            <List>\r\n              {this.state.messages.map((message, index) => (\r\n                <this.MessagePreview message={message} index={index} classes={classes}/>\r\n              ))}\r\n            </List>\r\n          </div>\r\n        </Drawer>\r\n        <main className={classes.content}>\r\n          <Toolbar variant=\"dense\"/>\r\n          {this.state.current === null ? <div /> : <this.MessageContent message={this.state.current} classes={classes}/>}\r\n        </main>\r\n        <Dialog\r\n          open={this.state.deleteDialog}\r\n          onClose={this.closeDialog}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">{\"Delete message?\"}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              Are you sure you want to delete this message? This action cannot be undone.\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.closeDialog} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={async () => {\r\n              await this.state.current.deleteMessage();\r\n              await this.loadMessages();\r\n              this.closeDialog();\r\n            }} color=\"primary\" autoFocus>\r\n              OK\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <MessagesPage classes={classes} />\r\n  )\r\n}","D:\\Projects\\Javascript\\website-manager-v2\\src\\pages\\main\\portfoliopage.js",["202","203","204","205","206","207","208","209","210"],"import React, { Component, useState } from 'react';\r\nimport { MainAppBar } from '@components'\r\nimport { fromFirestore } from '@api';\r\nimport { NestedList, Tiles, CategoryDialog, DeleteDialog } from '@components/portfolio';\r\nimport { \r\n  Box,\r\n  Button,\r\n  CircularProgress,\r\n  Dialog, DialogActions, DialogContent, DialogTitle,\r\n  Divider,\r\n  Drawer, \r\n  Fab,\r\n  Icon,\r\n  IconButton,\r\n  List, ListItem, ListItemSecondaryAction, ListItemText,\r\n  TextField,\r\n  Toolbar,\r\n  Tooltip,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { \r\n  Add,\r\n  Refresh,\r\n} from '@material-ui/icons/';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst _ = require('lodash');\r\n\r\nconst drawerWidth = 260;\r\n\r\n/*\r\nTODO:\r\n- Add Category\r\n- Edit Category\r\n- Delete Category \r\nAdd Subcategory (partial implementation)\r\nEdit Subcategory\r\n - Delete Subcategory\r\nAdd Photo\r\nEdit Photo\r\nDelete Photo\r\nDrag and Drop upload photo\r\nFullscreen photo viewer\r\n\r\n*/ \r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  paper: {\r\n    component: 'div',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: \"center\",\r\n    overflow: 'hidden',\r\n    minHeight: '95vh',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerContainer: {\r\n    overflow: 'auto',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    marginLeft: drawerWidth,\r\n    padding: theme.spacing(3),\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  fab: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(4),\r\n    right: theme.spacing(4),\r\n    boxShadow: 'none',\r\n    color: 'primary',\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n  iconButton: {\r\n    margin: theme.spacing(0, 1),\r\n  },\r\n}));\r\n\r\nclass PortfolioPage extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      manager: null,\r\n      loaded: false,\r\n      category: 0,\r\n      subcategory: 0,\r\n      addCategory: false,\r\n      editCategory: false,\r\n      deleteDialog: false,\r\n      addFab: false,\r\n    };\r\n    this.initializeManager();\r\n  }\r\n\r\n  initializeManager = async () => {\r\n    console.log('initializing manager...');\r\n    const m = await fromFirestore();\r\n    this.setState({\r\n      manager: m,\r\n      loaded: true,\r\n      category: 0,\r\n      subcategory: 0,\r\n    });\r\n  }\r\n\r\n  CategoriesDrawer = (props) => {\r\n    const { classes } = props;\r\n    return (\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <Toolbar variant=\"dense\"/>\r\n        <div className={classes.drawerContainer}>\r\n          <List>\r\n            <ListItem>\r\n              <ListItemText>\r\n                <Typography variant='h5'>\r\n                  Categories\r\n                </Typography>\r\n              </ListItemText>\r\n              <ListItemSecondaryAction>\r\n                <Box flexDirection='row'>\r\n                  <Tooltip title='Refresh'>\r\n                    <IconButton \r\n                      edge='end' \r\n                      onClick={this.initializeManager}\r\n                    >\r\n                      <Refresh />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                  <Tooltip title='Add Category'>\r\n                    <IconButton \r\n                      edge='end' \r\n                      onClick={() => {\r\n                        this.setState({ addCategory: true });\r\n                      }}\r\n                    >\r\n                      <Add />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </Box>\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n          </List>\r\n          <Divider />\r\n          <List>\r\n            {this.state.manager.getCategories().map((category, index) => (\r\n              <NestedList \r\n                key={`${category}/nestedlist`}\r\n                classes={classes} \r\n                name={category}\r\n                icon={this.state.manager.getIconAt(category)}\r\n                elements={this.state.manager.getSubcategoriesAt(category)}\r\n                onSelect={(i) => {\r\n                  this.setState({\r\n                    category: index,\r\n                    subcategory: i,\r\n                  });\r\n                }}\r\n                onOpen={() => {\r\n                  this.setState({\r\n                    category: index,\r\n                    subcategory: 0,\r\n                  });\r\n                }}\r\n              />\r\n            ))}\r\n          </List>\r\n        </div>\r\n      </Drawer>\r\n    );\r\n  }\r\n\r\n  handleClose = (confirm) => {\r\n    this.setState({\r\n      addCategory: false,\r\n      editCategory: false,\r\n      deleteDialog: false,\r\n      addFab: false,\r\n    });\r\n    if(confirm) {\r\n      this.setState({\r\n        category: 0,\r\n        subcategory: 0,\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const classes = this.props.classes;\r\n\r\n    return (\r\n      <div classes={classes.root}>\r\n        <MainAppBar page='portfolio'/>\r\n        <div>\r\n          {this.state.loaded\r\n          ? (\r\n            <div>\r\n              <this.CategoriesDrawer classes={classes}/>\r\n              <main className={classes.content}>\r\n                <Toolbar variant=\"dense\"/>\r\n                <Tiles \r\n                  classes={classes}\r\n                  category={this.state.manager.getCategory(this.state.category)}\r\n                  subcategory={this.state.manager.getSubcategoryFrom(this.state.category, this.state.subcategory)}\r\n                  data={this.state.manager.getPicturesQuery(`${this.state.manager.getCategory(this.state.category)}/${this.state.manager.getSubcategoryFrom(this.state.category, this.state.subcategory)}`)} \r\n                  onClick={(index) => {\r\n                    console.log(index);\r\n                  }}\r\n                  onEdit={() => {\r\n                    this.setState({ editCategory: true});\r\n                  }}\r\n                  onDelete={() => {\r\n                    this.setState({ deleteDialog: true});\r\n                  }}\r\n                />\r\n                <Fab \r\n                  className={classes.fab}\r\n                  variant=\"extended\"\r\n                  onClick={() => {\r\n                    if (this.state.subcategory === 0) {\r\n\r\n                    } else {\r\n\r\n                    }\r\n                  }}\r\n                >\r\n                  <Add className={classes.extendedIcon} />\r\n                  {`Add${this.state.subcategory === 0 ? '...' : ' Photo'}`}\r\n                </Fab>\r\n                <Dialog open={this.state.addCategory || this.state.editCategory} onClose={this.handleClose}>\r\n                  <CategoryDialog \r\n                    edit={this.state.editCategory}\r\n                    name={this.state.editCategory ? this.state.manager.getCategory(this.state.category) : ''}\r\n                    icon={this.state.editCategory ? this.state.manager.getIconFrom(this.state.category) : ''}\r\n                    onClose={this.handleClose}\r\n                    onSave={async (data) => {\r\n                      if (this.state.editCategory) {\r\n                        const oldName = this.state.manager.getCategory(this.state.category);\r\n                        const oldIcon = this.state.manager.getIconFrom(this.state.category);\r\n                        console.log(oldIcon);\r\n                        if(oldIcon !== data.icon) {\r\n                          await this.state.manager.changeIcon(oldName, data.icon);\r\n                        }\r\n                        if(oldName !== data.name) {\r\n                          await this.state.manager.renameCategory(oldName, data.name);\r\n                        }\r\n                      } else {\r\n                        await this.state.manager.addCategory(data.name, data.icon);\r\n                      }\r\n                    }}\r\n                  />\r\n                </Dialog>\r\n                <Dialog open={this.state.deleteDialog} onClose={this.handleClose}>\r\n                  <DeleteDialog \r\n                    name={this.state.subcategory === 0 ? this.state.manager.getCategory(this.state.category) : this.state.manager.getSubcategoryFrom(this.state.category, this.state.subcategory)}\r\n                    onClose={this.handleClose}\r\n                    onConfirm={async () => {\r\n                      if(this.state.subcategory === 0) {\r\n                        await this.state.manager.deleteCategory(this.state.manager.getCategory(this.state.category));\r\n                      } else {\r\n                        await this.state.manager.deleteSubcategory(this.state.manager.getCategory(this.state.category), this.state.manager.getSubcategoryFrom(this.state.category, this.state.subcategory));\r\n                      }\r\n                    }}\r\n                  />\r\n                </Dialog>\r\n              </main>\r\n            </div>\r\n          ) : (\r\n            <div className={classes.paper}>\r\n              <CircularProgress color='primary'/>\r\n              <Box m={1} />\r\n              <Typography variant='h5'>\r\n                Loading...\r\n              </Typography>\r\n            </div>\r\n          )\r\n        }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <PortfolioPage classes={classes} />\r\n  )\r\n}","D:\\Projects\\Javascript\\website-manager-v2\\src\\pages\\main\\mainpage.js",["211","212","213"],"import React, { Component } from 'react';\r\nimport { signOut, moveFirebaseFile } from '@firebase-api'\r\nimport { MainConsumer, ThemeToggleConsumer } from '@api';\r\nimport { \r\n  Box,\r\n  Button,\r\n  Grid,\r\n  IconButton,\r\n  Link,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport { Brightness7, Brightness3 } from '@material-ui/icons'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst _ = require('lodash');\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © Howard Tseng '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    component: 'div',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: \"center\",\r\n    overflow: 'hidden',\r\n    minHeight: '95vh',\r\n  },\r\n  nav: {\r\n    justifyContent: 'center',\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  button: {\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  bottom: {\r\n    display: 'flex',\r\n    position: 'absolute',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: \"center\",\r\n    bottom: theme.spacing(2),\r\n    left: '0',\r\n    right: '0',\r\n  },\r\n  toggleButton: {\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nclass MainPage extends Component {\r\n\r\n  render() {\r\n    const classes = this.props.classes;\r\n    return (\r\n      <Box className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h2\">\r\n          Website Manager\r\n        </Typography>\r\n        <Typography>\r\n          <Link href={'https://howardt12345.com'} target='_blank' rel=\"noopener noreferrer\" color='inherit'>\r\n            howardt12345.com\r\n          </Link>\r\n        </Typography>\r\n        <Typography>\r\n          <MainConsumer> \r\n            {maincontext => (\r\n              <Grid container className={classes.nav} spacing={6}>\r\n                <Grid item>\r\n                  <Link \r\n                    href=\"#\" \r\n                    onClick={() => {\r\n                      maincontext.setPage('portfolio');\r\n                    }} \r\n                    color=\"inherit\"\r\n                  >\r\n                    Portfolio (Old)\r\n                  </Link>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Link \r\n                    href=\"#\" \r\n                    onClick={() => {\r\n                      maincontext.setPage('photos');\r\n                    }} \r\n                    color=\"inherit\"\r\n                  >\r\n                    Photos\r\n                  </Link>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Link \r\n                    href=\"#\" \r\n                    onClick={() => {\r\n                      maincontext.setPage('messages');\r\n                    }} \r\n                    color=\"inherit\"\r\n                  >\r\n                    Messages\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            )}\r\n          </MainConsumer>\r\n        </Typography>\r\n        <Box className={classes.bottom}>\r\n          <ThemeToggleConsumer>\r\n            {themeContext => (\r\n              <IconButton \r\n                className={classes.toggleButton} \r\n                color ='inherit'\r\n                onClick={themeContext.toggleTheme}\r\n              >\r\n                {themeContext.dark ? <Brightness3 /> : <Brightness7 />}\r\n              </IconButton>\r\n            )}\r\n          </ThemeToggleConsumer>\r\n          <Button \r\n            variant=\"outlined\" \r\n            color=\"secondary\" \r\n            className={classes.button}\r\n            onClick={async () => {\r\n              await signOut();\r\n            }}\r\n          >\r\n            Sign Out\r\n          </Button>\r\n          <Copyright />\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n \r\nexport default () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <MainPage classes={classes} />\r\n  )\r\n}","D:\\Projects\\Javascript\\website-manager-v2\\src\\components\\index.js",[],"D:\\Projects\\Javascript\\website-manager-v2\\src\\components\\portfolio\\index.js",[],"D:\\Projects\\Javascript\\website-manager-v2\\src\\components\\portfolio\\deletedialog.js",[],"D:\\Projects\\Javascript\\website-manager-v2\\src\\components\\portfolio\\nestedlist.js",[],"D:\\Projects\\Javascript\\website-manager-v2\\src\\components\\portfolio\\categorydialog.js",[],"D:\\Projects\\Javascript\\website-manager-v2\\src\\components\\portfolio\\tiles.js",[],"D:\\Projects\\Javascript\\website-manager-v2\\src\\components\\react-image-masonry.js",[],"D:\\Projects\\Javascript\\website-manager-v2\\src\\components\\appbar.js",["214"],"import React, { Component } from 'react'\r\nimport { MainConsumer, ThemeToggleConsumer } from '@api';\r\nimport {\r\n  AppBar,\r\n  Box,\r\n  Grid,\r\n  IconButton,\r\n  Link,\r\n  Toolbar,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { ArrowBack, Brightness3, Brightness7 } from '@material-ui/icons'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: 'fixed',\r\n    color: 'default',\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    boxShadow: 'none',\r\n  },\r\n  nav: {\r\n    justifyContent: 'center',\r\n  },\r\n  link: {\r\n\r\n  },\r\n}));\r\n\r\nclass MainAppBar extends Component {\r\n\r\n  render() {\r\n    const classes = this.props.classes;\r\n    const page = this.props.page;\r\n\r\n    return (\r\n      <MainConsumer>\r\n       {maincontext => (\r\n        <AppBar color='default' className={classes.appBar}>\r\n          <Toolbar variant=\"dense\">\r\n            <IconButton \r\n              edge=\"start\" \r\n              className={classes.menuButton} \r\n              color=\"inherit\" \r\n              onClick={() => {\r\n                maincontext.setPage('index');\r\n              }} \r\n            >\r\n              <ArrowBack />\r\n            </IconButton>\r\n            <Grid container className={classes.nav} spacing={6}>\r\n              <Grid item>\r\n                <Typography>\r\n                  <Box fontWeight={ page === 'portfolio' ? 'fontWeightBold' : 'fontWeightRegular' }>\r\n                    <Link \r\n                      href=\"#\" \r\n                      onClick={() => {\r\n                        if(maincontext.page !== 'portfolio') {\r\n                          maincontext.setPage('portfolio');\r\n                        }\r\n                      }} \r\n                      color=\"inherit\"\r\n                    >\r\n                      Portfolio (Old)\r\n                    </Link>\r\n                  </Box>\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography>\r\n                  <Box fontWeight={ page === 'photos' ? 'fontWeightBold' : 'fontWeightRegular' }>\r\n                    <Link \r\n                      href=\"#\" \r\n                      onClick={() => {\r\n                        if(maincontext.page !== 'photos') {\r\n                          maincontext.setPage('photos');\r\n                        }\r\n                      }} \r\n                      color=\"inherit\"\r\n                    >\r\n                      Photos\r\n                    </Link>\r\n                  </Box>\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography>\r\n                  <Box fontWeight={ page === 'messages' ? 'fontWeightBold' : 'fontWeightRegular' }>\r\n                    <Link \r\n                      href=\"#\" \r\n                      onClick={() => {\r\n                        if(maincontext.page !== 'messages') {\r\n                          maincontext.setPage('messages');\r\n                        }\r\n                      }} \r\n                      color=\"inherit\"\r\n                    >\r\n                      Messages\r\n                    </Link>\r\n                  </Box>\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <ThemeToggleConsumer>\r\n              {themeContext => (\r\n                <IconButton \r\n                  className={classes.toggleButton} \r\n                  color ='inherit'\r\n                  onClick={themeContext.toggleTheme}\r\n                >\r\n                  {themeContext.dark ? <Brightness3 /> : <Brightness7 />}\r\n                </IconButton>\r\n              )}\r\n            </ThemeToggleConsumer>\r\n          </Toolbar>\r\n        </AppBar>\r\n       )} \r\n      </MainConsumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <MainAppBar classes={classes} {...props}/>\r\n  )\r\n}","D:\\Projects\\Javascript\\website-manager-v2\\src\\components\\material-ui-icon-picker\\index.js",[],"D:\\Projects\\Javascript\\website-manager-v2\\src\\components\\material-ui-icon-picker\\IconsStorage.js",[],"D:\\Projects\\Javascript\\website-manager-v2\\src\\components\\material-ui-icon-picker\\MaterialUiIconPicker.js",["215"],"import React from 'react';\r\nimport { \r\n\tButton, \r\n  Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle,\r\n\tIcon, \r\n\tLinearProgress,\r\n\tTextField,\r\n} from '@material-ui/core';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport IconsStorage from './IconsStorage';\r\nimport { hex2rgba } from '@utils';\r\n\r\nclass MaterialUiIconPicker extends React.Component {\r\n\r\n\ticonsStorage;\r\n\tstyles;\r\n\r\n\tgetStyles() {\r\n\t\tconst backgroundBox = {\r\n\t\t\tbackgroundColor: hex2rgba('#888888', 0.1),\r\n\t\t\tborderRadius: 4,\r\n\t\t\theight: 120,\r\n\t\t\topacity: 0,\r\n\t\t\tposition: 'absolute',\r\n\t\t\ttop: 0,\r\n\t\t\ttransitionProperty: 'opacity',\r\n\t\t\ttransitionDuration: '200ms',\r\n\t\t\ttransitionTimingFunction: 'ease-out',\r\n\t\t\twidth: 112,\r\n\t\t\tmarginLeft: 'calc(112px / 2)',\r\n\t\t\ttransform: 'translateX(-50%)',\r\n\t\t\ttransitionDelay: 'initial'\r\n\t\t};\r\n\r\n\t\tconst selectedBackgroundBox = Object.assign({}, backgroundBox);\r\n\t\tselectedBackgroundBox.opacity = 1;\r\n\r\n\t\treturn {\r\n\t\t\ticonsGrid: {\r\n\t\t\t\tdisplay: 'flex',\r\n\t\t\t\tflexWrap: 'wrap'\r\n\t\t\t},\r\n\t\t\ticonsItem: {\r\n\t\t\t\ttextAlign: 'center',\r\n\t\t\t\twidth: '25%',\r\n\t\t\t\tflexGrow: 1,\r\n\t\t\t\tmarginBottom: 10,\r\n\t\t\t\tposition: 'relative',\r\n\t\t\t\theight: 120,\r\n\t\t\t\tdisplay: 'flex',\r\n\t\t\t\talignItems: 'center',\r\n\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\tflexDirection: 'column',\r\n\t\t\t\tcursor: 'pointer'\r\n\t\t\t},\r\n\t\t\ticonsItemCaption: {\r\n\t\t\t\ttextTransform: 'uppercase',\r\n\t\t\t\tfontSize: 10,\r\n\t\t\t\twhiteSpace: 'nowrap',\r\n\t\t\t\toverflow: 'hidden',\r\n\t\t\t\ttextOverflow: 'ellipsis',\r\n\t\t\t\tposition: 'relative',\r\n\t\t\t\tzIndex: 2,\r\n\t\t\t\tmaxWidth: 100\r\n\t\t\t},\r\n\t\t\ticonsItemIcon: {\r\n\t\t\t\tcolor: 'rgb(117, 117, 117)',\r\n\t\t\t\tfontSize: 48,\r\n\t\t\t\twidth: 48,\r\n\t\t\t\theight: 48,\r\n\t\t\t\tmarginBottom: 10\r\n\t\t\t},\r\n\t\t\tbackgroundBox: backgroundBox,\r\n\t\t\tselectedBackgroundBox: selectedBackgroundBox,\r\n\t\t\theader: {\r\n\t\t\t\twrapper: {\r\n\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\tflexDirection: 'column',\r\n\t\t\t\t\tpaddingBottom: 0,\r\n\t\t\t\t\tpaddingLeft: 0,\r\n\t\t\t\t\tpaddingRight: 0\r\n\t\t\t\t},\r\n\t\t\t\tinput: {\r\n\t\t\t\t\tflex: 1,\r\n\t\t\t\t\tborder: 'none',\r\n\t\t\t\t\tpadding: 15,\r\n\t\t\t\t\tfontSize: 17,\r\n\t\t\t\t\tmargin: '0 40',\r\n\t\t\t\t\t':focus': {\r\n\t\t\t\t\t\toutline: 'none'\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\ticons: {},\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\tmargin: 0,\r\n\t\t\t\t\tpaddingLeft: 24,\r\n\t\t\t\t\tpaddingTop: 0,\r\n\t\t\t\t\tpaddingRight: 24,\r\n\t\t\t\t\ttextTransform: 'uppercase'\r\n\t\t\t\t},\r\n\t\t\t\tsearch: {display: 'flex',\r\n\t\t\t\t\tmarginTop: 10,\r\n\t\t\t\t\tposition: 'relative',\r\n\t\t\t\t\tzIndex: 4,\r\n\t\t\t\t\talignItems: 'center',\r\n\t\t\t\t\tpaddingLeft: 10,\r\n\t\t\t\t\tpaddingRight: 10\r\n\t\t\t\t},\r\n\t\t\t\tsearchIcon: {\r\n\t\t\t\t},\r\n\t\t\t\tcloseIcon: {\r\n\t\t\t\t\tcursor: 'pointer',\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t};\r\n\t}\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tpickerDialogOpen: false,\r\n\t\t\t_icons: [],\r\n\t\t\ticons: [],\r\n\t\t\ticon: null\r\n\t\t};\r\n\r\n\t\tthis.iconsStorage = new IconsStorage();\r\n\t}\r\n\r\n\tcomponentWillMount() {\r\n\t\tif (!document.querySelector('[href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"]')) {\r\n\t\t\tconst link = document.createElement('link');\r\n\t\t\tlink.setAttribute('href', 'https://fonts.googleapis.com/icon?family=Material+Icons');\r\n\t\t\tlink.setAttribute('rel', 'stylesheet');\r\n\t\t\tdocument.querySelector('head').appendChild(link);\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.iconsPromise = this.iconsStorage.getIcons();\r\n\t\tthis.iconsPromise.then(icons => this.showIcons(icons));\r\n\t}\r\n\t\r\n\tshowIcons(icons) {\r\n\t\tthis.setState({pickerDialogOpen: this.state.pickerDialogOpen, _icons: icons, icons: icons});\r\n\t}\r\n\r\n\thandleOpen() {\r\n\t\tthis.setState({\r\n\t\t\tpickerDialogOpen: true,\r\n\t\t\t_icons: this.state._icons,\r\n\t\t\ticons: this.state.icons,\r\n\t\t\tselected: this.state.selected,\r\n\t\t\tdidSearch: this.state.didSearch\r\n\t\t});\r\n\t};\r\n\r\n\thandleClose() {\r\n\t\tthis.setState({\r\n\t\t\tpickerDialogOpen: false,\r\n\t\t\t_icons: this.state._icons,\r\n\t\t\ticons: this.state._icons,\r\n\t\t\tselected: this.state.selected,\r\n\t\t\tdidSearch: false\r\n\t\t});\r\n\t};\r\n\r\n\tpickAndClose() {\r\n\t\tthis.props.onPick(this.state.selected);\r\n\t\tthis.handleClose();\r\n\t}\r\n\r\n\tselect(icon) {\r\n\t\tthis.setState({\r\n\t\t\tpickerDialogOpen: this.state.pickerDialogOpen,\r\n\t\t\ticons: this.state.icons,\r\n\t\t\t_icons: this.state._icons,\r\n\t\t\tselected: icon,\r\n\t\t\tdidSearch: this.state.didSearch\r\n\t\t});\r\n\t}\r\n\r\n\tfilterList(event) {\r\n\r\n\t\tif (event.target.value.toLowerCase().length === 0) {\r\n\t\t\tthis.clearSearch();\r\n\t\t} else {\r\n\t\t\tlet updatedList = this.state._icons;\r\n\t\t\tupdatedList = updatedList.filter(function (item) {\r\n\t\t\t\tconst searches = item.name.split('_').map(namePiece => namePiece.search(event.target.value.toLowerCase()) !== -1);\r\n\t\t\t\treturn searches.indexOf(true) > -1;\r\n\t\t\t});\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\tpickerDialogOpen: this.state.pickerDialogOpen,\r\n\t\t\t\t_icons: this.state._icons,\r\n\t\t\t\ticons: updatedList,\r\n\t\t\t\tselected: this.state.selected,\r\n\t\t\t\tdidSearch: true\r\n\t\t\t});\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tclearSearch() {\r\n\t\tthis.refs.searchInput.value = '';\r\n\r\n\t\tthis.setState({\r\n\t\t\tpickerDialogOpen: this.state.pickerDialogOpen,\r\n\t\t\t_icons: this.state._icons,\r\n\t\t\ticons: this.state._icons,\r\n\t\t\tselected: this.state.selected,\r\n\t\t\tdidSearch: false\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst styles = this.getStyles();\r\n\r\n\t\tconst actions = [\r\n\t\t\t<Button\r\n\t\t\t\tdisableElevation\r\n\t\t\t\tcolor='primary'\r\n\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\tonClick={this.handleClose.bind(this)}\r\n\t\t\t>{this.props.cancelLabel}</Button>,\r\n\t\t\t<Button\r\n\t\t\t\tcolor='primary'\r\n\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\tdisabled={!this.state.selected}\r\n\t\t\t\tonClick={this.pickAndClose.bind(this)}\r\n\t\t\t\tendIcon={this.state.selected ?\r\n\t\t\t\t\t<Icon className=\"material-icons\">{this.state.selected.name}</Icon> : null}\r\n\t\t\t>{this.props.pickLabel}</Button>,\r\n\t\t];\r\n\r\n\t\tconst icons = this.state.icons.map((icon, index) => {\r\n\t\t\treturn (<div key={index} style={styles.iconsItem} onClick={() => this.select(icon)}>\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={this.state.selected && this.state.selected.name === icon.name ? styles.selectedBackgroundBox : styles.backgroundBox}></div>\r\n\t\t\t\t<Icon style={styles.iconsItemIcon} className=\"material-icons\">{icon.name}</Icon>\r\n\t\t\t\t<div style={styles.iconsItemCaption}>{icon.name.split('_').join(' ')}</div>\r\n\t\t\t</div>);\r\n\t\t});\r\n\r\n\t\treturn (\r\n\t\t\t<MuiThemeProvider theme={this.props.theme}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Button variant=\"outlined\" onClick={this.handleOpen.bind(this)} color='primary'>{this.props.label}</Button>\r\n\r\n\t\t\t\t\t<Dialog\r\n\t\t\t\t\t\tscroll='paper'\r\n\t\t\t\t\t\topen={this.state.pickerDialogOpen}\r\n\t\t\t\t\t\tonClose={this.handleClose.bind(this)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<DialogTitle>\r\n\t\t\t\t\t\t\t<div style={styles.header.wrapper}>\r\n\t\t\t\t\t\t\t\t<h3 style={styles.header.title}>{this.props.modalTitle}</h3>\r\n\t\t\t\t\t\t\t\t<div style={styles.header.search}>\r\n\t\t\t\t\t\t\t\t\t<Icon className=\"material-icons\" style={styles.header.searchIcon}>search</Icon>\r\n\t\t\t\t\t\t\t\t\t<TextField \r\n\t\t\t\t\t\t\t\t\t\tref=\"searchInput\" \r\n\t\t\t\t\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\t\t\t\t\tstyle={styles.header.input}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search\"\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\tonChange={this.filterList.bind(this)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t{this.state.didSearch ? <Icon style={styles.header.closeIcon} onClick={this.clearSearch.bind(this)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"material-icons\">close</Icon> : null}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</DialogTitle>\r\n\t\t\t\t\t\t<DialogContent>\r\n\t\t\t\t\t\t\t{this.state.icons.length > 0 \r\n\t\t\t\t\t\t\t\t? <div style={styles.iconsGrid}>{icons}</div>\r\n\t\t\t\t\t\t\t\t: <LinearProgress mode=\"indeterminate\" />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</DialogContent>\r\n\t\t\t\t\t\t<DialogActions>\r\n\t\t\t\t\t\t\t{actions}\r\n\t\t\t\t\t\t</DialogActions>\r\n\t\t\t\t\t</Dialog>\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t</MuiThemeProvider>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nMaterialUiIconPicker.propTypes = {\r\n\tcancelLabel: PropTypes.string,\r\n\tlabel: PropTypes.string,\r\n\tmodalTitle: PropTypes.string,\r\n\tonPick: PropTypes.func.isRequired,\r\n\tpickLabel: PropTypes.string,\r\n\ttheme: PropTypes.object.isRequired\r\n};\r\n\r\nMaterialUiIconPicker.defaultProps = {\r\n\tcancelLabel: 'Cancel',\r\n\tlabel: 'Pick icon',\r\n\tmodalTitle: 'Material icon picker',\r\n\tpickLabel: 'Pick'\r\n};\r\n\r\nexport default MaterialUiIconPicker;\r\n","D:\\Projects\\Javascript\\website-manager-v2\\src\\components\\portfolio\\phototile.js",["216","217","218"],"import React, { useState, useEffect, useCallback, useRef } from \"react\";\r\n\r\nconst useDoubleClick = (click, doubleClick, timeout = 200) => {\r\n  // we're using useRef here for the useCallback to rememeber the timeout\r\n  const clickTimeout = useRef();\r\n\r\n  const clearClickTimeout = () => {\r\n      if (clickTimeout) {\r\n          clearTimeout(clickTimeout.current);\r\n          clickTimeout.current = undefined;\r\n      }\r\n  };\r\n\r\n  // return a memoized version of the callback that only changes if one of the dependencies has changed\r\n  return useCallback((event) => {\r\n      clearClickTimeout();\r\n      if (click && event.detail === 1) {\r\n          clickTimeout.current = setTimeout(() => {\r\n              click(event);\r\n          }, timeout);\r\n      }\r\n      if (event.detail % 2 === 0) {\r\n          doubleClick(event);\r\n      }\r\n  }, [click, doubleClick]);\r\n};\r\n\r\nconst imgStyle = {\r\n  transition: \"transform .135s cubic-bezier(0.0,0.0,0.2,1),opacity linear .15s\"\r\n};\r\nconst selectedImgStyle = {\r\n  transform: \"translateZ(0px) scale3d(0.9, 0.9, 1)\",\r\n  transition: \"transform .135s cubic-bezier(0.0,0.0,0.2,1),opacity linear .15s\"\r\n};\r\n\r\nconst cont = {\r\n  backgroundColor: \"#70707020\",\r\n  cursor: \"pointer\",\r\n  overflow: \"hidden\",\r\n  position: \"relative\"\r\n};\r\n\r\nconst PhotoTile = ({\r\n    index, \r\n    photo, \r\n    top,\r\n    left,\r\n    direction,\r\n    selected,\r\n    onClick, \r\n    onDoubleClick\r\n  }) => {\r\n    const [isSelected, setIsSelected] = useState(selected);\r\n\r\n    //calculate x,y scale\r\n    const sx = (100 - (30 / photo.width) * 100) / 100;\r\n    const sy = (100 - (30 / photo.height) * 100) / 100;\r\n    selectedImgStyle.transform = `translateZ(0px) scale3d(${sx}, ${sy}, 1)`;\r\n  \r\n    if (direction === \"column\") {\r\n      cont.position = \"absolute\";\r\n      cont.left = left;\r\n      cont.top = top;\r\n    }\r\n\r\n  return (\r\n    <div style={{ height: photo.height, width: photo.width, ...cont }}>\r\n      <img\r\n        {...photo}\r\n        style={\r\n          isSelected ? { ...imgStyle, ...selectedImgStyle } : { ...imgStyle }\r\n        }\r\n        onClick={useDoubleClick(onClick, () => {\r\n          setIsSelected(!isSelected);\r\n          onDoubleClick();\r\n        })}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default PhotoTile;",{"ruleId":"219","replacedBy":"220"},{"ruleId":"221","replacedBy":"222"},{"ruleId":"223","severity":1,"message":"224","line":4,"column":8,"nodeType":"225","messageId":"226","endLine":4,"endColumn":19},{"ruleId":"223","severity":1,"message":"227","line":1,"column":10,"nodeType":"225","messageId":"226","endLine":1,"endColumn":22},{"ruleId":"223","severity":1,"message":"228","line":7,"column":7,"nodeType":"225","messageId":"226","endLine":7,"endColumn":8},{"ruleId":"229","severity":1,"message":"230","line":48,"column":72,"nodeType":"231","messageId":"232","endLine":48,"endColumn":74},{"ruleId":"223","severity":1,"message":"233","line":2,"column":8,"nodeType":"225","messageId":"226","endLine":2,"endColumn":14},{"ruleId":"223","severity":1,"message":"228","line":16,"column":7,"nodeType":"225","messageId":"226","endLine":16,"endColumn":8},{"ruleId":"234","severity":1,"message":"235","line":101,"column":1,"nodeType":"236","endLine":106,"endColumn":2},{"ruleId":"223","severity":1,"message":"237","line":1,"column":28,"nodeType":"225","messageId":"226","endLine":1,"endColumn":36},{"ruleId":"223","severity":1,"message":"238","line":1,"column":38,"nodeType":"225","messageId":"226","endLine":1,"endColumn":49},{"ruleId":"223","severity":1,"message":"224","line":6,"column":3,"nodeType":"225","messageId":"226","endLine":6,"endColumn":14},{"ruleId":"223","severity":1,"message":"239","line":28,"column":10,"nodeType":"225","messageId":"226","endLine":28,"endColumn":22},{"ruleId":"223","severity":1,"message":"240","line":30,"column":28,"nodeType":"225","messageId":"226","endLine":30,"endColumn":38},{"ruleId":"223","severity":1,"message":"241","line":31,"column":10,"nodeType":"225","messageId":"226","endLine":31,"endColumn":21},{"ruleId":"242","severity":1,"message":"243","line":138,"column":11,"nodeType":"225","messageId":"244","endLine":138,"endColumn":14},{"ruleId":"234","severity":1,"message":"235","line":383,"column":1,"nodeType":"236","endLine":388,"endColumn":2},{"ruleId":"223","severity":1,"message":"245","line":4,"column":10,"nodeType":"225","messageId":"226","endLine":4,"endColumn":22},{"ruleId":"223","severity":1,"message":"228","line":31,"column":7,"nodeType":"225","messageId":"226","endLine":31,"endColumn":8},{"ruleId":"234","severity":1,"message":"235","line":437,"column":1,"nodeType":"236","endLine":442,"endColumn":2},{"ruleId":"223","severity":1,"message":"237","line":1,"column":28,"nodeType":"225","messageId":"226","endLine":1,"endColumn":36},{"ruleId":"223","severity":1,"message":"246","line":7,"column":3,"nodeType":"225","messageId":"226","endLine":7,"endColumn":9},{"ruleId":"223","severity":1,"message":"247","line":9,"column":11,"nodeType":"225","messageId":"226","endLine":9,"endColumn":24},{"ruleId":"223","severity":1,"message":"248","line":9,"column":26,"nodeType":"225","messageId":"226","endLine":9,"endColumn":39},{"ruleId":"223","severity":1,"message":"249","line":9,"column":41,"nodeType":"225","messageId":"226","endLine":9,"endColumn":52},{"ruleId":"223","severity":1,"message":"250","line":13,"column":3,"nodeType":"225","messageId":"226","endLine":13,"endColumn":7},{"ruleId":"223","severity":1,"message":"251","line":16,"column":3,"nodeType":"225","messageId":"226","endLine":16,"endColumn":12},{"ruleId":"223","severity":1,"message":"228","line":27,"column":7,"nodeType":"225","messageId":"226","endLine":27,"endColumn":8},{"ruleId":"234","severity":1,"message":"235","line":304,"column":1,"nodeType":"236","endLine":309,"endColumn":2},{"ruleId":"223","severity":1,"message":"252","line":2,"column":19,"nodeType":"225","messageId":"226","endLine":2,"endColumn":35},{"ruleId":"223","severity":1,"message":"228","line":14,"column":7,"nodeType":"225","messageId":"226","endLine":14,"endColumn":8},{"ruleId":"234","severity":1,"message":"235","line":142,"column":1,"nodeType":"236","endLine":147,"endColumn":2},{"ruleId":"234","severity":1,"message":"235","line":123,"column":1,"nodeType":"236","endLine":128,"endColumn":2},{"ruleId":"223","severity":1,"message":"253","line":4,"column":41,"nodeType":"225","messageId":"226","endLine":4,"endColumn":58},{"ruleId":"223","severity":1,"message":"254","line":1,"column":27,"nodeType":"225","messageId":"226","endLine":1,"endColumn":36},{"ruleId":"255","severity":1,"message":"256","line":25,"column":6,"nodeType":"257","endLine":25,"endColumn":26,"suggestions":"258"},{"ruleId":"259","severity":1,"message":"260","line":68,"column":7,"nodeType":"261","endLine":77,"endColumn":9},"no-native-reassign",["262"],"no-negated-in-lhs",["263"],"no-unused-vars","'CssBaseline' is defined but never used.","Identifier","unusedVar","'downloadFile' is defined but never used.","'_' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'styled' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'useState' is defined but never used.","'useCallback' is defined but never used.","'ImageMasonry' is defined but never used.","'getUrlsFor' is defined but never used.","'convertDate' is defined but never used.","no-redeclare","'tmp' is already defined.","redeclared","'MainConsumer' is defined but never used.","'Button' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogTitle' is defined but never used.","'Icon' is defined but never used.","'TextField' is defined but never used.","'moveFirebaseFile' is defined but never used.","'DialogContentText' is defined but never used.","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'timeout'. Either include it or remove the dependency array.","ArrayExpression",["264"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"265","fix":"266"},"Update the dependencies array to be: [click, doubleClick, timeout]",{"range":"267","text":"268"},[832,852],"[click, doubleClick, timeout]"]